# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Enables manual trigger button

jobs:
  test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        zig-version: ['0.15.1']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: ${{ matrix.zig-version }}
      
      - name: Verify Zig installation
        run: zig version
      
      - name: Build
        run: zig build
      
      - name: Run tests
        run: zig build test
      
      - name: Check formatting
        run: zig fmt --check src/
  
  stats:
    name: Code Statistics
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Count lines of code
        id: loc
        run: |
          echo "## ðŸ“Š Code Statistics" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Count total lines
          TOTAL=$(find src -name "*.zig" | xargs wc -l | tail -1 | awk '{print $1}')
          echo "**Total Lines:** $TOTAL" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Count by directory
          echo "### By Directory" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          find src -name "*.zig" -exec dirname {} \; | sort -u | while read dir; do
            count=$(find "$dir" -maxdepth 1 -name "*.zig" | xargs wc -l 2>/dev/null | tail -1 | awk '{print $1}')
            printf "%-30s %6s lines\n" "$dir" "$count"
          done >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Top 10 largest files
          echo "### Largest Files" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          find src -name "*.zig" -exec wc -l {} \; | sort -rn | head -10 | awk '{printf "%-6s lines  %s\n", $1, $2}' >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Tests vs implementation
          TEST_LINES=$(find src -name "*.zig" -exec grep -c "^test " {} \; 2>/dev/null | awk '{s+=$1} END {print s}')
          echo "**Test Coverage:** $TEST_LINES test blocks" >> $GITHUB_STEP_SUMMARY
          
          # Save for badge
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
      
      - name: LOC Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const exec = require('child_process').execSync;
            const loc = exec('find src -name "*.zig" | xargs wc -l | tail -1 | awk \'{print $1}\'').toString().trim();
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ“Š **Total Lines of Code:** ${loc} lines`
            });